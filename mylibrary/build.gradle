apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'maven-publish'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    //这个配置去除gradle 对library mudule默认值只编译release buildType的限制。让library也可以用productFlavors
//    publishNonDefault true
    productFlavors {

    }
}

dependencies {
    implementation fileTree(dir: 'lib', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation "com.android.support:appcompat-v7:${supportLibraryVer}"
    testImplementation 'junit:junit:4.12'

    implementation "com.android.support:design:${supportLibraryVer}"
    //okIO
    implementation 'com.squareup.okio:okio:1.11.0'
    //okhttp
    implementation 'com.squareup.okhttp3:okhttp:3.4.1'
    //
    implementation 'commons-codec:commons-codec:1.11'

    testImplementation "junit:junit:4.12"

    implementation "com.alibaba:fastjson:1.2.16"

    implementation "com.amap.api:location:3.3.0"
    //rxjava
    implementation 'io.reactivex:rxjava:1.3.1'
    implementation 'io.reactivex:rxandroid:1.2.1'
}


// 指定上传仓库的路径
def localMavenRepo = 'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath
//打包war并上传(放)到本地maven仓库 目前是$userhome$/.m2/mavenrepository。测试可行
uploadArchives {
    repositories.mavenDeployer {
        repository(url: localMavenRepo)
        pom.groupId = "com.liuyihui"
        pom.artifactId = project.name
        pom.version = android.defaultConfig.versionName
        pom.project {
            name = project.name
            packaging = 'aar'
            description = 'description'
        }
    }
}


//未测试是否管用
publishing {
    publications {
        library(MavenPublication) {
            groupId 'com.wlqq.android'
            artifactId project.name
            version android.defaultConfig.versionName
            // 若是 android gradle plugin 3.3.x ，这里需要改成 bundleReleaseAar
            //artifact(bundleRelease)
            //artifact(bundleReleaseAar)
        }
    }

    repositories {
        mavenLocal()
    }
}
